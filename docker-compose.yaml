version: '2'
    #   backend: 172.10.1.2
    #   frontend: 172.10.1.3
    #   nginx: 172.10.1.4
services:
    nginx:
        image: nginx:latest
        environment:
            NGINX_SERVER_NAME: docker_machine.local
        container_name: server_nginx
        restart: always
        links:
            - frontend
            - backend
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
        ports:
            - 80:80
            - 443:443
            - 5000:5000
        networks:
            bridge:
                ipv4_address: 172.10.0.4

    frontend:
        build: ./frontend
        volumes:
            - ./frontend:/usr/local/apache2/htdocs/
        networks:
            bridge:
                ipv4_address: 172.10.0.3

    backend:
        # Путь до Dockerfile
        build: ./backend
        # Имя для создаваемого контейнера
        container_name: backend-flask
        # Создание переменных окружения в контейнере
        environment:
            # для отладки (при запуске в релиз убрать!)
            - FLASK_DEBUG=development
            ## Позволяет отслеживать процесс работы приложения в командной строке
            - PYTHONUNBUFFERED=True
            ##
            # Перезапускаем сервис в случае падения
        restart: on-failure
        # Прокладывам путь для файлов. Все файлы, которые хранятся у вас в
        # директории ./backend, появятся в директории контейнера /backend
        volumes:
            - ./backend:/backend
        # Открываем порт в контейнер
        # Порт, который будет смотреть наружу : порт который используется внутри контейнера
        command: gunicorn main:"create_flask_app()" -b 0.0.0.0:5000 --reload
        networks:
            bridge:
                ipv4_address: 172.10.0.2
networks:
    bridge:
        driver: bridge
        ipam:
            config:
                - subnet: 172.10.0.0/16
                  gateway: 172.10.0.1
